import { NextPage } from 'next';
import Head from 'next/head';
import { Block } from '@/types/2048';
import { G2048Board } from '@/components/atoms/G2048Board';
import {
  createBlocks, flick, flickLeft, flickRight,
} from '@/utils/2048';
import { useCallback, useEffect, useState } from 'react';
import { directions } from '@/constants/2048';

export const Page: NextPage = () => {
  const [turn, setTurn] = useState<number>(0);
  const [blocks, setBlocks] = useState<Block[]>([]);

  const nextTurn = (nextBlocks: Block[]) => {
    if (JSON.stringify(nextBlocks) === JSON.stringify(blocks)) return;
    setTurn(turn + 1);
    setBlocks([...createBlocks({
      turn,
      blocks: nextBlocks,
    })]);
  };

  const onSwipeLeft = () => {
    const nextBlocks = flick(directions.LEFT, blocks);
    nextTurn(nextBlocks);
  };

  const onSwipeRight = () => {
    const nextBlocks = flick(directions.RIGHT, blocks);
    nextTurn(nextBlocks);
  };

  const onSwipeUp = () => {
    const nextBlocks = flick(directions.UP, blocks);
    nextTurn(nextBlocks);
  };

  const onSwipeDown = () => {
    const nextBlocks = flick(directions.DOWN, blocks);
    nextTurn(nextBlocks);
  };

  useEffect(() => {
    setBlocks(createBlocks({}));
    setTurn(1);
  }, []);

  return (
    <>
      <Head>
        <title>Next.js and Socket.io Sandbox</title>
        <meta httpEquiv="Content-Security-Policy" content="default-src data: gap://* file://* https://ssl.gstatic.com *; img-src 'self' * data:; style-src 'self' 'unsafe-inline' *; script-src 'self' 'unsafe-eval' 'unsafe-inline' *; connect-src 'self' * ws://* wss://*;" />
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <>
        <style jsx global>
          {`
            html, body {
              height: 100%;
              width: 100%;
              overflow: auto;
              position: fixed;
            }
          `}
        </style>
      </>
      <G2048Board
        blocks={blocks}
        onSwipeLeft={onSwipeLeft}
        onSwipeRight={onSwipeRight}
        onSwipeUp={onSwipeUp}
        onSwipeDown={onSwipeDown}
      />
    </>
  );
};

export default Page;
